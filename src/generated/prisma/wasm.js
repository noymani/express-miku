
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  hashedPassword: 'hashedPassword'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  published: 'published',
  authorId: 'authorId',
  updateAt: 'updateAt',
  create_at: 'create_at'
};

exports.Prisma.MangasScalarFieldEnum = {
  id: 'id',
  mangaId: 'mangaId',
  mangaImg: 'mangaImg',
  mangaImgData: 'mangaImgData',
  url: 'url',
  mangaTitle: 'mangaTitle',
  storyName: 'storyName',
  category: 'category',
  subject: 'subject',
  painter: 'painter',
  language: 'language',
  charecter: 'charecter',
  updateAt: 'updateAt',
  create_at: 'create_at'
};

exports.Prisma.TypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.MangasOnTypesScalarFieldEnum = {
  mangasId: 'mangasId',
  typeId: 'typeId'
};

exports.Prisma.MangaChScalarFieldEnum = {
  id: 'id',
  mangaChId: 'mangaChId',
  mangaId: 'mangaId',
  mangaChName: 'mangaChName',
  mangaChUrl: 'mangaChUrl',
  updateAt: 'updateAt',
  create_at: 'create_at'
};

exports.Prisma.MangaChImgScalarFieldEnum = {
  id: 'id',
  mangaChImgId: 'mangaChImgId',
  data: 'data',
  url: 'url',
  status_download: 'status_download',
  mangaChId: 'mangaChId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Post: 'Post',
  Mangas: 'Mangas',
  Type: 'Type',
  MangasOnTypes: 'MangasOnTypes',
  MangaCh: 'MangaCh',
  MangaChImg: 'MangaChImg'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\desktop\\miku-doujin\\express\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "D:\\desktop\\miku-doujin\\express\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.11.1",
  "engineVersion": "f40f79ec31188888a2e33acda0ecc8fd10a853a9",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id             String @id @default(cuid())\n  email          String @unique\n  hashedPassword String\n  posts          Post[]\n}\n\nmodel Post {\n  id        String   @id @default(cuid())\n  title     String\n  slug      String   @unique\n  content   String\n  published Boolean? @default(false)\n  authorId  String\n  updateAt  DateTime @updatedAt\n  create_at DateTime @default(now())\n  author    User     @relation(fields: [authorId], references: [id])\n\n  @@index([slug])\n}\n\nmodel Mangas {\n  id           String          @id @default(cuid())\n  mangaId      String          @unique\n  mangaImg     String\n  mangaImgData Bytes?\n  url          String\n  mangaTitle   String\n  storyName    String\n  category     String\n  subject      String\n  painter      String\n  language     String\n  charecter    String\n  updateAt     DateTime        @updatedAt\n  create_at    DateTime        @default(now())\n  mangaCh      MangaCh[]\n  types        MangasOnTypes[]\n}\n\nmodel Type {\n  id     Int             @id @default(autoincrement())\n  name   String          @unique\n  Mangas MangasOnTypes[]\n}\n\nmodel MangasOnTypes {\n  mangasId String\n  typeId   Int\n  Type     Type   @relation(fields: [typeId], references: [id])\n  Mangas   Mangas @relation(fields: [mangasId], references: [id])\n\n  @@id([mangasId, typeId])\n}\n\nmodel MangaCh {\n  id          String       @id @default(cuid())\n  mangaChId   String\n  mangaId     String\n  mangaChName String\n  mangaChUrl  String\n  updateAt    DateTime     @updatedAt\n  create_at   DateTime     @default(now())\n  mangas      Mangas       @relation(fields: [mangaId], references: [id])\n  mangaChImg  MangaChImg[]\n}\n\nmodel MangaChImg {\n  id              String   @id @default(cuid())\n  mangaChImgId    String?\n  data            Bytes?\n  url             String\n  status_download Boolean? @default(false)\n  mangaChId       String?\n  MangaCh         MangaCh? @relation(fields: [mangaChId], references: [id])\n}\n",
  "inlineSchemaHash": "d1a852f5ac1c973dace998c151d3b18ff3706f8eb5b59e69a73a8d0a9ccdbeff",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashedPassword\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUser\"}],\"dbName\":null},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"create_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostToUser\"}],\"dbName\":null},\"Mangas\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaImg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaImgData\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"painter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"charecter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"create_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mangaCh\",\"kind\":\"object\",\"type\":\"MangaCh\",\"relationName\":\"MangaChToMangas\"},{\"name\":\"types\",\"kind\":\"object\",\"type\":\"MangasOnTypes\",\"relationName\":\"MangasToMangasOnTypes\"}],\"dbName\":null},\"Type\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Mangas\",\"kind\":\"object\",\"type\":\"MangasOnTypes\",\"relationName\":\"MangasOnTypesToType\"}],\"dbName\":null},\"MangasOnTypes\":{\"fields\":[{\"name\":\"mangasId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Type\",\"kind\":\"object\",\"type\":\"Type\",\"relationName\":\"MangasOnTypesToType\"},{\"name\":\"Mangas\",\"kind\":\"object\",\"type\":\"Mangas\",\"relationName\":\"MangasToMangasOnTypes\"}],\"dbName\":null},\"MangaCh\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaChId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaChName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaChUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updateAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"create_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mangas\",\"kind\":\"object\",\"type\":\"Mangas\",\"relationName\":\"MangaChToMangas\"},{\"name\":\"mangaChImg\",\"kind\":\"object\",\"type\":\"MangaChImg\",\"relationName\":\"MangaChToMangaChImg\"}],\"dbName\":null},\"MangaChImg\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mangaChImgId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status_download\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mangaChId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"MangaCh\",\"kind\":\"object\",\"type\":\"MangaCh\",\"relationName\":\"MangaChToMangaChImg\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

